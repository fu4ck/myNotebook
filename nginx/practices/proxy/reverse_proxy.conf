server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    
    location /mystatus {
       stub_status;
    }    

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # ^~ 开头表示uri以某个常规字符串开头，理解为匹配 url路径即可
    location ^~ /bilibili_proxy/ { 
        # 把这个访问路径的请求代理到本地的8099端口
        proxy_pass http://127.0.0.1:8099/; # /bilibili_proxy/ --> 127.0.0.1:8099/ #表示代理到这个路径
        # proxy_pass http://127.0.0.1:8099 # /bilibili_proxy/ --> 127.0.0.1:8099/bilibili_proxy/ #表示代理到这个server
	}
    
    # 情形A
    # 访问 http://www.test.com/testa/aaaa
    # 后端的request_uri为: /testa/aaaa
    location ^~ /testa/ {
        proxy_pass http://127.0.0.1:8801;
    }
    
    # 情形B
    # 访问 http://www.test.com/testb/bbbb
    # 后端的request_uri为: /bbbb
    location ^~ /testb/ {
        proxy_pass http://127.0.0.1:8801/;
    }

    # 情形C
    # 下面这段location是正确的(当location为正则表达式时，proxy_pass 不能包含URI部分)
    location ~ /testc {
        proxy_pass http://127.0.0.1:8801;
    }
    
	# extra
	location / {
	   proxy_pass http://127.0.0.1:8811;
	   #相当于proxy_redirect http://127.0.0.1:8811 /
	   #也就是把访问地址http://127.0.0.1:8811重定向到上面那个location /，然后再proxy_pass http://127.0.0.1:8811;
	   proxy_redirect default; 
	   
	   proxy_set_header Host $http_host;
	   proxy_set_header X-Real-IP $remote_addr;
	   
	   proxy_connect_timeout 30;
	   proxy_send_timeout 60;
	   proxy_read_timeout 60;
	   
	   proxy_buffer_size 32k;
	   proxy_buffering on;
	   proxy_buffers 4 128k;
	   proxy_busy_buffers_size 256k;
	   proxy_max_temp_file_size 256k;
	}

}
