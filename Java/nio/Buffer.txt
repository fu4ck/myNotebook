Buffer是Channel（铁路）上的火车，负责存储数据

对于不同数据类型，提供了对应类型的缓冲区( ByteBuffer, CharBuffer...........

allocate()分配非直接缓冲区，buffer建立在JVM内存中
allocateDirect()分配直接缓冲区，buffer建立在物理内存中，效率高，但消耗大、不易控制

核心属性：
capacity
最大数据容量，创建后就不能改变

limit
表示buffer中有效数据的长度。

position
正在操作数据的位置

mark
记录当前position的位置，可通过reset方法把position恢复到mark的位置
0 <= mark <= position <= limit <= capacity


Buffer clear()
public final Buffer clear() {   
    position = 0;      //设置为0
    limit = capacity;    //极限和容量相同
    mark = -1;   //取消标记
    return this;   
} 
把position设为0，把limit设为capacity，一般在把数据写入Buffer前调用。
 
Buffer flip()
public final Buffer flip() {   
     limit = position;    
     position = 0;   
     mark = -1;   
     return this;   
} 
把limit设为当前position，把position设为0，一般在从Buffer读出数据前调用。
 
Buffer rewind()
public final Buffer rewind() {   
    position = 0;   
    mark = -1;   
    return this;   
} 
可重复读数据